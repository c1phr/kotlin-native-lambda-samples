import org.gradle.internal.os.OperatingSystem
plugins {
    id 'kotlin-multiplatform' version '1.3.21'
    id 'kotlinx-serialization' version '1.3.20'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url  "https://dl.bintray.com/c1phr/com.batchofcode" }
    maven {
            url  "https://kotlin.bintray.com/ktor"
        }
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

kotlin {
    targets {
        // For ARM, preset should be changed to presets.iosArm32 or presets.iosArm64
        // For Linux, preset should be changed to e.g. presets.linuxX64
        // For MacOS, preset should be changed to e.g. presets.macosX64
        fromPreset(presets.linuxX64, 'CSVParser')
        if (OperatingSystem.current().isMacOsX()) {
            println("Building for Mac")
        //    fromPreset(presets.macosX64, 'CSVParser')
        }
        else {
            println("Building for Linux")
          //  fromPreset(presets.linuxX64, 'CSVParser')
        }
        configure([CSVParser]) {
            compilations.main.outputKinds 'EXECUTABLE'
            compilations.main.entryPoint 'sample.csvparser.main'
        }
    }

    sourceSets {
        CSVParserMain {
            dependencies {
                implementation 'com.batchofcode:lambda-runtime-kotlin-native:BUILD_40'
                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.10.0'
            }
        }
    }
}

task runProgram {
    def buildType = 'RELEASE' // Change to 'DEBUG' to run application with debug symbols.
    dependsOn kotlin.targets.CSVParser.compilations.main.linkTaskName('EXECUTABLE', buildType)
    doLast {
        exec {
            executable kotlin.targets.CSVParser.compilations.main.getBinary('EXECUTABLE', buildType)
            args './European_Mammals_Red_List_Nov_2009.csv', '4', '100'
        }
    }
}
